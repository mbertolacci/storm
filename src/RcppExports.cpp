// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rgevVector
NumericVector rgevVector(int n, double mu, double sigma, double xi);
RcppExport SEXP threecomponentmixture_rgevVector(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP xiSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    __result = Rcpp::wrap(rgevVector(n, mu, sigma, xi));
    return __result;
END_RCPP
}
// estimatePwm
double estimatePwm(NumericVector x, int r);
RcppExport SEXP threecomponentmixture_estimatePwm(SEXP xSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    __result = Rcpp::wrap(estimatePwm(x, r));
    return __result;
END_RCPP
}
// gevPwmEstimate
NumericVector gevPwmEstimate(NumericVector x);
RcppExport SEXP threecomponentmixture_gevPwmEstimate(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(gevPwmEstimate(x));
    return __result;
END_RCPP
}
// gevPwmEstimateConstrained
NumericVector gevPwmEstimateConstrained(NumericVector x, double supportLim);
RcppExport SEXP threecomponentmixture_gevPwmEstimateConstrained(SEXP xSEXP, SEXP supportLimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type supportLim(supportLimSEXP);
    __result = Rcpp::wrap(gevPwmEstimateConstrained(x, supportLim));
    return __result;
END_RCPP
}
// threeComponentMixtureHMMSample
List threeComponentMixtureHMMSample(int nSamples, int burnIn, NumericVector y, List prior, NumericVector zStart, NumericVector thetaStart);
RcppExport SEXP threecomponentmixture_threeComponentMixtureHMMSample(SEXP nSamplesSEXP, SEXP burnInSEXP, SEXP ySEXP, SEXP priorSEXP, SEXP zStartSEXP, SEXP thetaStartSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type nSamples(nSamplesSEXP);
    Rcpp::traits::input_parameter< int >::type burnIn(burnInSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< List >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zStart(zStartSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thetaStart(thetaStartSEXP);
    __result = Rcpp::wrap(threeComponentMixtureHMMSample(nSamples, burnIn, y, prior, zStart, thetaStart));
    return __result;
END_RCPP
}
// threeComponentMixtureSample
List threeComponentMixtureSample(int nSamples, int burnIn, NumericVector y, List prior, NumericVector zStart, NumericVector thetaStart);
RcppExport SEXP threecomponentmixture_threeComponentMixtureSample(SEXP nSamplesSEXP, SEXP burnInSEXP, SEXP ySEXP, SEXP priorSEXP, SEXP zStartSEXP, SEXP thetaStartSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type nSamples(nSamplesSEXP);
    Rcpp::traits::input_parameter< int >::type burnIn(burnInSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< List >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zStart(zStartSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thetaStart(thetaStartSEXP);
    __result = Rcpp::wrap(threeComponentMixtureSample(nSamples, burnIn, y, prior, zStart, thetaStart));
    return __result;
END_RCPP
}
